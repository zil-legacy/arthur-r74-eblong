
	.SEGMENT "HINTS"


	.FUNCT	DO-HINTS:ANY:0:0,Q,WIN,WCLR,QN,FG,BG,NUM,MAXC,?TMP1
	HLIGHT	H-NORMAL
	CURSET	-1,0
	CALL1	INIT-HINT-SCREEN >WIN
	WINATTR	S-TEXT,A-WRAP,O-CLEAR
	FONT	1
	WINGET	-3,WFSIZE
	SHIFT	STACK,-8 >Q
	WINGET	-3,WHIGH
	DIV	STACK,Q >BOTTOM-HINT-NUM
	SCREEN	S-WINDOW
	WINGET	S-WINDOW,WCOLOR >WCLR
	GETB	0,30
	EQUAL?	STACK,APPLE-2C,APPLE-2E,APPLE-2GS \?CCL3
	COLOR	1,1
	HLIGHT	H-INVERSE
	JUMP	?PRG12
?CCL3:	GET	0,0
	BTST	STACK,1 \?PRG6
	ICALL	CCURSET,2,9
	COLOR	1,-1
	JUMP	?PRG12
?PRG6:	WINGET	S-TEXT,WCOLOR >BG
	SHIFT	BG,-8 >FG
	EQUAL?	FG,-1,255 \?CND8
	SET	'FG,1
?CND8:	BAND	BG,255 >BG
	EQUAL?	BG,-1,255 \?CND10
	SET	'BG,1
?CND10:	COLOR	FG,BG
?PRG12:	CLEAR	S-TEXT
	SCREEN	S-WINDOW
	FONT	1
	ICALL	HINT-TITLE,INVISICLUES,S-WINDOW
	SCREEN	S-TEXT
	WINATTR	-3,A-SCRIPT,O-CLEAR
	MOUSE-LIMIT	-1
	DIROUT	D-TABLE-ON,K-DIROUT-TBL
	DIROUT	D-TABLE-OFF
	SET	'GET-HINT-ROUTINE,H-CHAPT-NAME
	GET	HINTS,0
	ICALL2	H-PUT-UP-FROBS,STACK
	ADD	K-HINT-ITEMS,2 >?TMP1
	GET	K-HINT-ITEMS,0
	INTBL?	H-CHAPT-NUM,?TMP1,STACK >QN /?BOGUS17
?BOGUS17:	ZERO?	QN \?CCL16
	SET	'QN,1
	JUMP	?CND14
?CCL16:	SUB	QN,K-HINT-ITEMS
	DIV	STACK,2 >QN
?CND14:	GET	HINTS,0
	GRTR?	QN,STACK \?CND18
	PRINTI	" ["
	PRINTN	QN
	PRINTC	93
	SET	'QN,1
?CND18:	ICALL2	H-NEW-CURSOR,QN
?PRG20:	GET	K-HINT-ITEMS,0 >MAXC
	ZERO?	DEMO-VERSION? /?CCL24
	CALL2	INPUT-DEMO,1 >BG
	JUMP	?CND22
?CCL24:	INPUT	1 >BG
?CND22:	EQUAL?	BG,CLICK1,CLICK2 \?CND25
	CALL1	SELECT-HINT-BY-MOUSE >FG
	GRTR?	FG,0 /?CND25
	EQUAL?	FG,-1 \?CCL31
	SET	'BG,78
	JUMP	?CND25
?CCL31:	EQUAL?	FG,-2 \?CCL33
	SET	'BG,80
	JUMP	?CND25
?CCL33:	EQUAL?	FG,-3 \?CCL35
	SET	'BG,13
	JUMP	?CND25
?CCL35:	EQUAL?	FG,-4 \?CCL37
	SET	'BG,81
?CND25:	EQUAL?	BG,77,109,81 /?CTR39
	EQUAL?	BG,113 \?CCL40
?CTR39:	SET	'Q,TRUE-VALUE
	JUMP	?REP21
?CCL37:	SOUND	S-BEEP
	JUMP	?PRG20
?CCL40:	EQUAL?	BG,LEFT-ARROW \?CCL44
	SUB	QN,BOTTOM-HINT-NUM >NUM
	LESS?	0,NUM \?CCL47
	ICALL	H-NEW-CURSOR,QN,TRUE-VALUE
	SET	'QN,NUM
	ICALL2	H-NEW-CURSOR,QN
	SET	'H-QUEST-NUM,1
	JUMP	?PRG20
?CCL47:	SOUND	S-BEEP
	JUMP	?PRG20
?CCL44:	EQUAL?	BG,RIGHT-ARROW \?CCL49
	ADD	QN,BOTTOM-HINT-NUM >NUM
	LESS?	MAXC,NUM /?CCL52
	ICALL	H-NEW-CURSOR,QN,TRUE-VALUE
	SET	'QN,NUM
	ICALL2	H-NEW-CURSOR,QN
	SET	'H-QUEST-NUM,1
	JUMP	?PRG20
?CCL52:	SOUND	S-BEEP
	JUMP	?PRG20
?CCL49:	EQUAL?	BG,78,110,DOWN-ARROW \?CCL54
	SET	'NUM,QN
	ICALL	H-NEW-CURSOR,NUM,TRUE-VALUE
?PRG55:	IGRTR?	'NUM,MAXC \?CND57
	SET	'NUM,1
?CND57:	EQUAL?	NUM,QN \?CCL61
	SOUND	S-BEEP
	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG20
?CCL61:	CALL2	H-NEW-CURSOR,NUM
	ZERO?	STACK /?PRG55
	SET	'QN,NUM
	SET	'H-QUEST-NUM,1
	JUMP	?PRG20
?CCL54:	EQUAL?	BG,80,112,UP-ARROW \?CCL64
	SET	'NUM,QN
	ICALL	H-NEW-CURSOR,NUM,TRUE-VALUE
?PRG65:	DLESS?	'NUM,1 \?CND67
	SET	'NUM,MAXC
?CND67:	EQUAL?	NUM,QN \?CCL71
	SOUND	S-BEEP
	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG20
?CCL71:	CALL2	H-NEW-CURSOR,NUM
	ZERO?	STACK /?PRG65
	SET	'QN,NUM
	SET	'H-QUEST-NUM,1
	JUMP	?PRG20
?CCL64:	EQUAL?	BG,13,10,32 \?CCL74
	GET	K-HINT-ITEMS,QN >H-CHAPT-NUM
	CALL1	H-PICK-QUESTION >Q
	JUMP	?REP21
?CCL74:	EQUAL?	BG,CLICK1,CLICK2 \?CCL76
	GRTR?	FG,MAXC \?CCL79
	SOUND	S-BEEP
	JUMP	?PRG20
?CCL79:	ICALL	H-NEW-CURSOR,QN,TRUE-VALUE
	CALL2	H-NEW-CURSOR,FG
	ZERO?	STACK /?CCL82
	SET	'QN,FG
	SET	'H-QUEST-NUM,1
	EQUAL?	BG,CLICK2 \?PRG20
	GET	K-HINT-ITEMS,QN >H-CHAPT-NUM
	CALL1	H-PICK-QUESTION >Q
?REP21:	ZERO?	Q /?PRG12
	CLEAR	-1
	SCREEN	S-WINDOW
	GETB	0,30
	EQUAL?	STACK,APPLE-2C,APPLE-2E,APPLE-2GS \?CCL89
	HLIGHT	H-NORMAL
	JUMP	?CND87
?CCL82:	SOUND	S-BEEP
	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG20
?CCL76:	SOUND	S-BEEP
	JUMP	?PRG20
?CCL89:	BAND	WCLR,255 >?TMP1
	SHIFT	WCLR,-8
	COLOR	?TMP1,STACK
?CND87:	SCREEN	S-TEXT
	HLIGHT	H-NORMAL
	WINATTR	S-TEXT,A-WRAP,O-SET
	WINATTR	S-TEXT,A-SCRIPT,O-SET
	CURSET	-2,0
	ICALL1	LEAVE-HINT-SCREEN
	RETURN	2


	.FUNCT	H-PICK-QUESTION:ANY:0:0,CHR,MAXQ,Q,WID,QN,TMP,NUM,?TMP1
?FCN:	CATCH	 >PARSE-SENTENCE-ACTIVATION
	HLIGHT	H-NORMAL
	CLEAR	S-TEXT
	GET	HINTS,H-CHAPT-NUM
	GET	STACK,1
	ICALL	HINT-TITLE,STACK,S-WINDOW
	CALL	CENTER-LINE,M-MAIN-HINT-MENU,2 >WID
	GET	HINTS,H-CHAPT-NUM
	GET	STACK,0
	SUB	STACK,1 >MAXQ
	SCREEN	S-TEXT
	SET	'GET-HINT-ROUTINE,H-GET-QUEST
	ICALL2	H-PUT-UP-FROBS,MAXQ
	ADD	K-HINT-ITEMS,2 >?TMP1
	GET	K-HINT-ITEMS,0
	INTBL?	H-QUEST-NUM,?TMP1,STACK >QN /?BOGUS4
?BOGUS4:	ZERO?	QN \?CCL3
	SET	'QN,1
	JUMP	?CND1
?CCL3:	SUB	QN,K-HINT-ITEMS
	DIV	STACK,2 >QN
?CND1:	GRTR?	QN,MAXQ \?CND5
	PRINTI	" ["
	PRINTN	QN
	PRINTC	93
	SET	'QN,1
?CND5:	ICALL2	H-NEW-CURSOR,QN
?PRG7:	ZERO?	DEMO-VERSION? /?CCL11
	CALL2	INPUT-DEMO,1 >CHR
	JUMP	?CND9
?CCL11:	INPUT	1 >CHR
?CND9:	EQUAL?	CHR,CLICK1,CLICK2 \?CND12
	CALL	SELECT-HINT-BY-MOUSE,WID,TRUE-VALUE >TMP
	GRTR?	TMP,0 /?CND12
	EQUAL?	TMP,-1 \?CCL18
	SET	'CHR,78
	JUMP	?CND12
?CCL18:	EQUAL?	TMP,-2 \?CCL20
	SET	'CHR,80
	JUMP	?CND12
?CCL20:	EQUAL?	TMP,-3 \?CCL22
	SET	'CHR,13
	JUMP	?CND12
?CCL22:	EQUAL?	TMP,-4 \?CCL24
	SET	'CHR,81
	JUMP	?CND12
?CCL24:	EQUAL?	TMP,-5 \?CCL26
	SET	'CHR,77
?CND12:	EQUAL?	CHR,81,113 /TRUE
	EQUAL?	CHR,77,109 \?CCL31
	SET	'Q,TRUE-VALUE
	JUMP	?REP8
?CCL26:	SOUND	S-BEEP
	JUMP	?PRG7
?CCL31:	EQUAL?	CHR,LEFT-ARROW \?CCL33
	SUB	QN,BOTTOM-HINT-NUM >NUM
	LESS?	0,NUM \?CCL36
	ICALL	H-NEW-CURSOR,QN,TRUE-VALUE
	SET	'QN,NUM
	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG7
?CCL36:	SOUND	S-BEEP
	JUMP	?PRG7
?CCL33:	EQUAL?	CHR,RIGHT-ARROW \?CCL38
	ADD	QN,BOTTOM-HINT-NUM >NUM
	LESS?	MAXQ,NUM /?CCL41
	ICALL	H-NEW-CURSOR,QN,TRUE-VALUE
	SET	'QN,NUM
	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG7
?CCL41:	SOUND	S-BEEP
	JUMP	?PRG7
?CCL38:	EQUAL?	CHR,78,110,DOWN-ARROW \?CCL43
	SET	'NUM,QN
	ICALL	H-NEW-CURSOR,NUM,TRUE-VALUE
?PRG44:	GET	K-HINT-ITEMS,0
	IGRTR?	'NUM,STACK \?CND46
	SET	'NUM,1
?CND46:	EQUAL?	NUM,QN \?CCL50
	SOUND	S-BEEP
	JUMP	?REP45
?CCL50:	CALL2	H-NEW-CURSOR,NUM
	ZERO?	STACK /?PRG44
	SET	'QN,NUM
?REP45:	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG7
?CCL43:	EQUAL?	CHR,80,112,UP-ARROW \?CCL53
	SET	'NUM,QN
	ICALL	H-NEW-CURSOR,NUM,TRUE-VALUE
?PRG54:	DLESS?	'NUM,1 \?CND56
	GET	K-HINT-ITEMS,0 >NUM
?CND56:	EQUAL?	NUM,QN \?CCL60
	SOUND	S-BEEP
	JUMP	?REP55
?CCL60:	CALL2	H-NEW-CURSOR,NUM
	ZERO?	STACK /?PRG54
	SET	'QN,NUM
?REP55:	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG7
?CCL53:	EQUAL?	CHR,CLICK1,CLICK2 \?CCL63
	GRTR?	TMP,MAXQ \?CCL66
	SOUND	S-BEEP
	JUMP	?PRG7
?CCL66:	ICALL	H-NEW-CURSOR,QN,TRUE-VALUE
	CALL2	H-NEW-CURSOR,TMP
	ZERO?	STACK /?CCL69
	SET	'QN,TMP
	EQUAL?	CHR,CLICK2 \?PRG7
	GET	K-HINT-ITEMS,QN >H-QUEST-NUM
	ICALL1	DISPLAY-HINT
	JUMP	?REP8
?CCL69:	SOUND	S-BEEP
	ICALL2	H-NEW-CURSOR,QN
	JUMP	?PRG7
?CCL63:	EQUAL?	CHR,13,10,32 \?CCL73
	GET	K-HINT-ITEMS,QN >H-QUEST-NUM
	ICALL1	DISPLAY-HINT
?REP8:	ZERO?	Q /?FCN
	RFALSE	
?CCL73:	SOUND	S-BEEP
	JUMP	?PRG7


	.FUNCT	H-NEW-CURSOR:ANY:1:2,POS,OFF?,Y,X,?TMP1
	SET	'Y,POS
	SET	'X,LEFT-HINT-COLUMN
	GRTR?	POS,BOTTOM-HINT-NUM \?CND1
	SUB	Y,BOTTOM-HINT-NUM >Y
	WINGET	-3,WWIDE
	DIV	STACK,2 >X
?CND1:	SUB	Y,1 >?TMP1
	WINGET	-3,WFSIZE
	SHIFT	STACK,-8
	MUL	?TMP1,STACK
	ADD	1,STACK
	CURSET	STACK,X
	ZERO?	OFF? \?CCL5
	HLIGHT	H-INVERSE
	JUMP	?CND3
?CCL5:	HLIGHT	H-NORMAL
?CND3:	GET	K-HINT-ITEMS,POS
	CALL	GET-HINT-ROUTINE,STACK >X
	ZERO?	X /?CND6
	PRINT	X
	PRINTC	32
?CND6:	ZERO?	OFF? \?CND8
	HLIGHT	H-NORMAL
?CND8:	RETURN	X


	.FUNCT	SELECT-HINT-BY-MOUSE:ANY:0:2,WID,Q?,VAL,MID,X,Y,WIN,?TMP1
	GET	0,27
	GET	STACK,2 >Y
	GET	0,27
	GET	STACK,1 >X
	WINGET	S-WINDOW,WTOP >VAL
	GRTR?	VAL,Y /?CCL3
	SUB	Y,VAL >?TMP1
	WINGET	S-WINDOW,WHIGH
	LESS?	?TMP1,STACK \?CCL3
	SET	'WIN,S-WINDOW
	JUMP	?CND1
?CCL3:	WINGET	S-TEXT,WTOP >VAL
	SET	'WIN,S-TEXT
?CND1:	SUB	Y,VAL >Y
	WINGET	WIN,WFSIZE
	SHIFT	STACK,-8 >VAL
	DIV	Y,VAL >VAL
	GETB	0,33 >?TMP1
	WINGET	WIN,WFSIZE
	BAND	STACK,255
	MUL	?TMP1,STACK
	DIV	STACK,2 >MID
	EQUAL?	WIN,S-WINDOW \?CCL8
	EQUAL?	VAL,1 \?CCL11
	DIV	WID,2 >VAL
	ZERO?	VAL /?CCL14
	SUB	MID,VAL
	GRTR?	X,STACK \?CCL14
	ADD	MID,VAL
	LESS?	X,STACK \?CCL14
	RETURN	-5
?CCL14:	GRTR?	X,MID /?CCL19
	RETURN	-1
?CCL19:	RETURN	-3
?CCL11:	EQUAL?	VAL,2 \FALSE
	DIV	H-OR-USE-MOUSE-WID,2 >VAL
	SUB	MID,VAL
	LESS?	X,STACK \?CCL24
	RETURN	-2
?CCL24:	ADD	MID,VAL
	GRTR?	X,STACK \FALSE
	RETURN	-4
?CCL8:	INC	'VAL
	GRTR?	X,MID \?CCL30
	ZERO?	Q? \?CCL30
	ADD	VAL,BOTTOM-HINT-NUM >VAL
	RETURN	VAL
?CCL30:	GRTR?	VAL,BOTTOM-HINT-NUM \?CND28
	SET	'VAL,BOTTOM-HINT-NUM
?CND28:	RETURN	VAL


	.FUNCT	INVERSE-LINE:ANY:0:2,LN,INV,?TMP1
	ASSIGNED?	'INV /?CND1
	SET	'INV,H-INVERSE
?CND1:	ZERO?	LN /?CND3
	ICALL	CCURSET,LN,1
?CND3:	HLIGHT	INV
	ZERO?	INV \?CCL7
	ERASE	1
	RTRUE	
?CCL7:	FONT	4
	GETB	0,39 >LN
	WINGET	-3,WWIDE >INV
	ADD	LN,INV
	DIV	STACK,LN
	ICALL2	PRINT-SPACES,STACK
	GETB	0,30
	EQUAL?	STACK,APPLE-2E,APPLE-2C,APPLE-2GS \?CND8
	CURGET	K-DIROUT-TBL
	GET	K-DIROUT-TBL,0 >?TMP1
	SUB	INV,LN
	CURSET	?TMP1,STACK
	PRINTC	32
?CND8:	FONT	1
	HLIGHT	H-NORMAL
	RTRUE	


	.FUNCT	PRINT-SPACES:ANY:1:1,CNT
?PRG1:	DLESS?	'CNT,0 /TRUE
	PRINTC	32
	JUMP	?PRG1


	.FUNCT	INPUT-DEMO:ANY:1:1,ARG,CHR
	SET	'DEMO-VERSION?,-1
	INPUT	ARG,DEMO-TIMEOUT,SLIDE-SHOW-HANDLER >CHR
	EQUAL?	DEMO-VERSION?,1 \?CCL3
	CALL1	END-DEMO
	RSTACK	
?CCL3:	WINPUT	S-TEXT,15,-999
	RETURN	CHR


	.FUNCT	END-DEMO:ANY:0:0
?FCN:	CLEAR	-1
	PRINTI	"
You have reached the end of this demonstration version of
"
	ICALL1	V-VERSION
	PRINTI	"

Hit any key to start over..."
	INPUT	1,SLIDE-SHOW-TIMEOUT,SLIDE-SHOW-HANDLER
	SCREEN	S-TEXT
	COLOR	1,1
	RESTART	
	JUMP	?FCN


	.FUNCT	SLIDE-SHOW-HANDLER:ANY:0:0
	SET	'DEMO-VERSION?,1
	RTRUE	


	.FUNCT	DISPLAY-HINT:ANY:0:0,H,MX,CNT,CV,SHIFT?,COUNT-OFFS,WID,CURCX,CURC,FLG,?TMP1
	HLIGHT	H-NORMAL
	CLEAR	S-TEXT
	SCREEN	S-WINDOW
	ICALL	INVERSE-LINE,3,H-NORMAL
	ICALL	RIGHT-LINE,Q-RESUME-STORY,3
	ICALL	INVERSE-LINE,2,H-NORMAL
	ICALL	RIGHT-LINE,RETURN-SEE-NEW-HINT,2
	GET	0,8
	BTST	STACK,32 \?CND1
	CALL	CENTER-LINE,H-OR-USE-MOUSE,3 >H-OR-USE-MOUSE-WID
?CND1:	ICALL	INVERSE-LINE,1,H-NORMAL
	HLIGHT	H-BOLD
	GET	HINTS,H-CHAPT-NUM >?TMP1
	ADD	H-QUEST-NUM,1
	GET	?TMP1,STACK >H
	SUB	H-CHAPT-NUM,1
	GET	HINT-COUNTS,STACK >CV
	GET	H,2
	ICALL	CENTER-LINE,STACK,1,H-INVERSE
	HLIGHT	H-NORMAL
	CALL	CENTER-LINE,M-SEE-HINT-MENU,2 >WID
	GET	H,0 >MX
	DIROUT	D-SCREEN-OFF
	GET	H,2
	PRINT	STACK
	CRLF	
	DIROUT	D-SCREEN-ON
	SCREEN	S-TEXT
	WINATTR	-3,A-SCRIPT,O-SET
	WINATTR	S-TEXT,A-WRAP,O-SET
	CURSET	1,1
	MOD	H-QUEST-NUM,2 >SHIFT?
	SUB	H-QUEST-NUM,1
	DIV	STACK,2 >COUNT-OFFS
	SET	'CNT,2
	GETB	CV,COUNT-OFFS >CURCX
	ZERO?	SHIFT? /?CCL5
	SHIFT	CURCX,-4
	JUMP	?CND3
?CCL5:	PUSH	CURCX
?CND3:	BAND	STACK,15
	ADD	1,STACK >CURC
?PRG6:	IGRTR?	'CNT,CURC /?REP7
	SUB	MX,CNT
	ADD	STACK,1
	PRINTN	STACK
	PRINTI	"> "
	GET	H,CNT
	PRINT	STACK
	CRLF	
	JUMP	?PRG6
?REP7:	SET	'FLG,TRUE-VALUE
?PRG11:	ZERO?	FLG /?CND13
	SET	'FLG,FALSE-VALUE
	GRTR?	CNT,MX \?CCL17
	PRINT	NO-MORE-HINTS
	CRLF	
	SCREEN	S-WINDOW
	ICALL	INVERSE-LINE,2,H-NORMAL
	ICALL	CENTER-LINE,M-SEE-HINT-MENU,2
	SCREEN	S-TEXT
	JUMP	?CND13
?CCL17:	SUB	MX,CNT
	ADD	STACK,1
	PRINTN	STACK
	PRINTI	"> "
?CND13:	ZERO?	DEMO-VERSION? /?CCL20
	CALL2	INPUT-DEMO,1 >CURC
	JUMP	?CND18
?CCL20:	INPUT	1 >CURC
?CND18:	EQUAL?	CURC,CLICK1,CLICK2 \?CND21
	CALL2	SELECT-HINT-BY-MOUSE,WID >CURCX
	GRTR?	CURCX,0 /?CND21
	EQUAL?	CURCX,-3 \?CCL27
	SET	'CURC,13
	JUMP	?CND21
?CCL27:	EQUAL?	CURCX,-4 \?CCL29
	SET	'CURC,81
	JUMP	?CND21
?CCL29:	EQUAL?	CURCX,-5 \?CCL31
	SET	'CURC,77
?CND21:	EQUAL?	CURC,77,109,81 /?CTR33
	EQUAL?	CURC,113 \?CCL34
?CTR33:	ZERO?	SHIFT? /?CCL39
	GETB	CV,COUNT-OFFS
	BAND	STACK,15 >?TMP1
	SUB	CNT,2
	SHIFT	STACK,4
	BOR	?TMP1,STACK
	PUTB	CV,COUNT-OFFS,STACK
	JUMP	?CND37
?CCL31:	SOUND	S-BEEP
	JUMP	?PRG11
?CCL39:	GETB	CV,COUNT-OFFS
	BAND	STACK,240 >?TMP1
	SUB	CNT,2
	BOR	?TMP1,STACK
	PUTB	CV,COUNT-OFFS,STACK
?CND37:	EQUAL?	CURC,81,113 \?CCL42
	THROW	TRUE-VALUE,PARSE-SENTENCE-ACTIVATION
	JUMP	?PRG11
?CCL42:	WINATTR	-3,A-SCRIPT,O-CLEAR
	WINATTR	S-TEXT,A-WRAP,O-CLEAR
	RTRUE	
?CCL34:	EQUAL?	CURC,13,10 \?CCL44
	GRTR?	CNT,MX /?CCL47
	SET	'FLG,TRUE-VALUE
	GET	H,CNT
	PRINT	STACK
	CRLF	
	IGRTR?	'CNT,MX \?PRG11
	SET	'FLG,FALSE-VALUE
	PRINT	NO-MORE-HINTS
	CRLF	
	SCREEN	S-WINDOW
	ICALL	INVERSE-LINE,2,H-NORMAL
	ICALL	CENTER-LINE,M-SEE-HINT-MENU,2
	SCREEN	S-TEXT
	JUMP	?PRG11
?CCL47:	SOUND	S-BEEP
	JUMP	?PRG11
?CCL44:	SOUND	S-BEEP
	JUMP	?PRG11


	.FUNCT	RT-SEE-QST?:ANY:1:1,OBJ
	ZERO?	OBJ /TRUE
	LESS?	0,OBJ \?CTR4
	GRTR?	OBJ,LAST-OBJECT \?CCL5
?CTR4:	CALL	OBJ
	RSTACK	
?CCL5:	IN?	OBJ,ROOMS \?CCL9
	FSET?	OBJ,TOUCHBIT /TRUE
	RFALSE	
?CCL9:	FSET?	OBJ,SEENBIT /TRUE
	RFALSE	


	.FUNCT	H-CHAPT-NAME:ANY:1:1,N,I,MAX,?TMP1
	GET	HINTS,N
	GET	STACK,0
	SUB	STACK,1 >MAX
?PRG1:	IGRTR?	'I,MAX /FALSE
	GET	HINTS,N >?TMP1
	ADD	I,1
	GET	?TMP1,STACK
	GET	STACK,1
	CALL2	RT-SEE-QST?,STACK
	ZERO?	STACK /?PRG1
	GET	HINTS,N
	GET	STACK,1
	RSTACK	


	.FUNCT	H-GET-QUEST:ANY:1:1,N,?TMP1
	GET	HINTS,H-CHAPT-NUM >?TMP1
	ADD	N,1
	GET	?TMP1,STACK
	GET	STACK,1
	CALL2	RT-SEE-QST?,STACK
	ZERO?	STACK /FALSE
	GET	HINTS,H-CHAPT-NUM >?TMP1
	ADD	N,1
	GET	?TMP1,STACK
	GET	STACK,2
	RSTACK	


	.FUNCT	H-PUT-UP-FROBS:ANY:1:1,MX,ST,QN,X,Y,TMP,BHL,WID
	SET	'QN,1
	SET	'X,LEFT-HINT-COLUMN
	SET	'Y,TOP-HINT-LINE
	HLIGHT	H-NORMAL
	SET	'BHL,BOTTOM-HINT-NUM
	WINGET	-3,WFSIZE
	SHIFT	STACK,-8 >WID
?PRG1:	IGRTR?	'ST,MX \?CND3
	SUB	QN,1
	PUT	K-HINT-ITEMS,0,STACK
	RTRUE	
?CND3:	CALL	GET-HINT-ROUTINE,ST >TMP
	ZERO?	TMP /?PRG1
	SUB	Y,1
	MUL	STACK,WID
	ADD	1,STACK
	CURSET	STACK,X
	PRINT	TMP
	ERASE	1
	PUT	K-HINT-ITEMS,QN,ST
	INC	'QN
	IGRTR?	'Y,BHL \?PRG1
	SET	'Y,TOP-HINT-LINE
	WINGET	-3,WWIDE
	DIV	STACK,2 >X
	JUMP	?PRG1


	.FUNCT	INIT-HINT-SCREEN:ANY:0:0
	CLEAR	-1
	ICALL2	CSPLIT,4
	SCREEN	S-TEXT
	RETURN	S-WINDOW


	.FUNCT	LEAVE-HINT-SCREEN:ANY:0:0
	ICALL1	INIT-STATUS-LINE
	RTRUE	


	.FUNCT	HINT-TITLE:ANY:2:3,TITLE,WIN,THIRD
	ASSIGNED?	'THIRD /?CND1
	SET	'THIRD,TRUE-VALUE
?CND1:	SCREEN	S-WINDOW
	ICALL	INVERSE-LINE,1,H-NORMAL
	ICALL	INVERSE-LINE,2,H-NORMAL
	ICALL	INVERSE-LINE,3,H-NORMAL
	HLIGHT	H-BOLD
	ICALL	CENTER-LINE,TITLE,1,H-INVERSE
	HLIGHT	H-NORMAL
	ICALL	LEFT-LINE,2,NEXT-HINT
	GET	0,8
	BTST	STACK,32 \?CND3
	CALL	CENTER-LINE,H-OR-USE-MOUSE,3 >H-OR-USE-MOUSE-WID
?CND3:	ICALL	LEFT-LINE,3,PREVIOUS-HINT
	ZERO?	THIRD /FALSE
	ICALL	RIGHT-LINE,RETURN-SEE-HINT,2
	CALL	RIGHT-LINE,Q-RESUME-STORY,3
	RSTACK	


	.FUNCT	LEFT-LINE:ANY:2:3,LN,STR,INV
	ICALL	CCURSET,LN,1
	ZERO?	INV /?CND1
	HLIGHT	INV
?CND1:	PRINT	STR
	ZERO?	INV /FALSE
	HLIGHT	H-NORMAL
	RTRUE	


	.FUNCT	RIGHT-LINE:ANY:1:4,STR,LN,INV,LEN
	CALL	JUSTIFIED-LINE,STR,LN,INV,LEN,1
	RSTACK	


	.FUNCT	CENTER-LINE:ANY:1:4,STR,LN,INV,LEN
	CALL	JUSTIFIED-LINE,STR,LN,INV,LEN,2
	RSTACK	


	.FUNCT	JUSTIFIED-LINE:ANY:5:5,STR,LN,INV,LEN,CTR
	ZERO?	LN \?CCL3
	CURGET	K-DIROUT-TBL
	GET	K-DIROUT-TBL,0 >LN
	JUMP	?CND1
?CCL3:	DEC	'LN
	WINGET	-3,WFSIZE
	SHIFT	STACK,-8
	MUL	LN,STACK
	ADD	1,STACK >LN
?CND1:	ZERO?	LEN \?CND4
	DIROUT	D-TABLE-ON,K-DIROUT-TBL
	PRINT	STR
	PRINTC	32
	DIROUT	D-TABLE-OFF
	GET	0,24 >LEN
?CND4:	WINGET	-3,WWIDE
	SUB	STACK,LEN
	DIV	STACK,CTR
	CURSET	LN,STACK
	ZERO?	INV /?CND6
	HLIGHT	INV
?CND6:	PRINT	STR
	PRINTC	32
	ZERO?	INV \?CCL9
	RETURN	LEN
?CCL9:	HLIGHT	H-NORMAL
	RETURN	LEN

	.ENDSEG

	.ENDI
